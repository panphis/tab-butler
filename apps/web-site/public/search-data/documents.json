[
  {
    "slug": "/introduction/changelog",
    "title": "Changelog",
    "description": "Changelogs and improvements to the Documents projects.",
    "content": "## release v1.0.0\n\n发布\n"
  },
  {
    "slug": "/introduction",
    "title": "Introduction",
    "description": "This section provides an overview of how to get started with the Documents, Next.js Document Starter Kit.",
    "content": "![Banner](/images/banner.png \"Documents\")\n\n## Documents\n\n介绍\n\n<CardGrid>\n  <Card subtitle=\"Instructions\" title=\"Installation\" description=\"Get started with Documents using our quick start installation guide to get your project started.\" href=\"/docs/introduction/installation\" />\n\n  <Card subtitle=\"Setup\" title=\"Site Settings\" description=\"Setting up your Documents projects layout, links and search engine optimisation.\" href=\"/docs/introduction/setup\" />\n\n  <Card subtitle=\"Support\" title=\"Rubix Studios\" description=\"Australia's leading branding, marketing and web development company.\" href=\"https://www.rubixstudios.com.au/\" external={true} />\n</CardGrid>\n"
  },
  {
    "slug": "/introduction/installation",
    "title": "Installation",
    "description": "This guide covers the installation of Documents and how to edit your new project.",
    "content": "## 安装\n\n### 通过谷歌浏览器插件市场\n\n### 手动下载安装\n\n通过 Github 下载发布版本下载并安装\n\n### 构建安装包安装\n\n<Step>\n  <StepItem title=\"System Requirements\">\n    * **Node.js:** Make sure you have Node.js installed. The project uses `npm`, which comes with Node.js. Install Node.js from here.\n    * **NPM or Yarn:** Since the project uses `npm` commands, ensure that npm is installed with Node.js. Alternatively, you can use Yarn if preferred.\n\n    To verify installation, run:\n\n    ```bash\n    node -v\r\n    npm -v\n    ```\n  </StepItem>\n\n  <StepItem title=\"Git\">\n    You need to have Git installed to clone the repository. Download Git from [here](https://git-scm.com/).\n\n    ```bash\n    git --version\n    ```\n  </StepItem>\n\n  <StepItem title=\"Code Editor\">\n    You’ll need a code editor to work on the project. Common options include:\n\n    * [Visual Studio Code](https://code.visualstudio.com/)\n    * [WebStorm](https://www.jetbrains.com/webstorm/)\n    * Any other text editor you prefer.\n  </StepItem>\n\n  <StepItem title=\"Required Knowledge\">\n    * **Next.js:** Since this is a Next.js project, you should be familiar with Next.js basics.\n    * **React:** The project uses React, so understanding React's component structure and hooks will help.\n    * **TypeScript:** The project is written in TypeScript, so you should have a basic understanding of it.\n    * **Tailwind:** The project uses Tailwind CSS for styling.\n    * **MDX:** Markdown + JSX (MDX) is used for writing documentation.\n  </StepItem>\n</Step>\n\n#### 安装\n\n<Step>\n  <StepItem title=\"Clone the Repository\">\n    First, clone the repository to your local machine using Git:\n\n    ```bash\n    git clone https://github.com/rubixvi/rubix-documents.git\n    ```\n\n    Change the directory to the project folder:\n\n    ```bash\n    cd rubix-documents\n    ```\n  </StepItem>\n\n  <StepItem title=\"Install Dependencies\">\n    Use npm to install all the required dependencies:\n\n    ```bash\n    npm install\n    ```\n\n    This will install all the dependencies listed in the package.json file, including:\n\n    * Next.js\n    * React\n    * TypeScript\n    * Tailwind CSS\n    * MDX components\n    * Other dependencies like ESLint, PostCSS, Husky, etc.\n  </StepItem>\n\n  <StepItem title=\"Running the Development Server\">\n    Start the development server by running:\n\n    ```bash\n    npm run dev\n    ```\n\n    This will start the local server, and you can open your browser at:\n\n    ```arduino\n    http://localhost:3000\n    ```\n  </StepItem>\n\n  <StepItem title=\"Editing the Project\">\n    * **MDX Files:** Documentation content is stored in `contents/docs`.\n    * **Components:** You can edit React components in the `components/` directory.\n    * **Tailwind:** Tailwind styling are managed in `tailwind.config.ts` and `app/globals.css`.\n\n    To make any changes to the project, open the files in your editor and modify them as needed.\n\n    <Note title=\"Required\" type=\"danger\">\n      The project's search functionality relies on the Husky's automation to build\r\n      `search-data/documents.json` ensure git commit is performed to generate this\r\n      file.\n    </Note>\n  </StepItem>\n\n  <StepItem title=\"Building for Production\">\n    Once you’ve made your changes and want to build the project for production:\n\n    ```bash\n    npm run build\n    ```\n\n    This will generate a production-ready build of the app.\n  </StepItem>\n\n  <StepItem title=\"Running Production Server\">\n    To run the production server:\n\n    ```bash\n    npm run start\n    ```\n\n    The production app will be available at:\n\n    ```arduino\n    http://localhost:3000\n    ```\n  </StepItem>\n</Step>\n\n## Optional\n\n<Step>\n  <StepItem title=\"Deploying to Vercel\">\n    This project is optimized for Vercel deployment. To deploy to Vercel:\n\n    * Go to [vercel.com](https://vercel.com/) and sign up.\n    * Link your GitHub repository and deploy the project.\n    * Vercel will handle the build process for you automatically.\n  </StepItem>\n\n  <StepItem title=\"Linting and Pre-commit Hooks\">\n    The project uses ESLint for linting and Husky for Git hooks. These tools are configured automatically, but you can customize them in `.eslintrc.json` and `.husky` directories.\n  </StepItem>\n</Step>\n"
  }
]